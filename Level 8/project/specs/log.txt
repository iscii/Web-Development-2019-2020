8/6/2020
To Do:
    - update stats by time
        - when app is exited, store time and date in data.json
        - when app is reopened, find time diff and update accordingly
        - maybe track age and lifespan by the minute
    - statchecks
Completed:
    -actually squashed the bug where stats don't update
        - the problem was that currentPet was not updated
        along with the pet info, and display uses currentPet
        so I just added an ajax getdata after writedata to update currentPet
    - gave xmlhttprequest a synchronous option
        - generates a warning

8/5/2020
To Do:
Completed:
    -[DID NOT] squash some bugs
        -(8/6/2020) the bug squashing created more bugs
8/4/2020
To Do:
    - update stats by time
        - when app is exited, store time and date in data.json
        - when app is reopened, find time diff and update accordingly
        - maybe track age and lifespan by the minute
    - statchecks
Completed:
    -spent hours figuring out a bug to fix it by adding & currentPet to getpet's if !init display pet...

8/1/2020
To Do:
    - update stats by time
        - when app is exited, store time and date in data.json
        - when app is reopened, find time diff and update accordingly
        - maybe track age and lifespan by the minute
    - statchecks
Completed:
    - update all pets at once
        - update stats
        - one timestamp for all pets; updating real-time
        - display upon every update
    - made fatigue and hunger bar green to red, since the lower the healthier
    - update stats per hour
        - currently set to per minute for testing purposes

7/31/2020
To Do:
    - update all pets at once
        - one timestamp for all pets; updating real-time
        - every minute, check for all pets stats and if they decrease or if pet dies.
    
    - update stats by time
        - per real-time minute
        - when app is exited, store time and date in data.json
        - when app is reopened, find time diff and update accordingly
        - maybe track age and lifespan by the minute
    
     -since all stats are updated per hour, maybe instead of minutes do updateHour();

Completed:
    - statbars using progress element
    - lots of css for statbars
    - lots of wasted time with input and statbar css. nng it's so limited

7/30/2020
To Do:
    - update all pets at once
        - one timestamp for all pets; updating real-time
        - every minute, check for all pets stats and if they decrease or if pet dies.
    
    - update stats by time
        - per real-time minute
        - when app is exited, store time and date in data.json
        - when app is reopened, find time diff and update accordingly
        - maybe track age and lifespan by the minute
    
    - input type slider as health bars for the stats
        - cannot be modified
        - remove the knob

Completed:
    - display type, name, lifespan, appetite, energy
    - update stats
        - countdown to minutes
        - by-minute update according to real-time, regardless of when site is loaded
7/29/2020
To Do:
    - display type, name, lifespan, appetite, energy
    - update stats by time
        - per real-time hour
        - when app is exited, store time and date in data.json
        - when app is reopened, find time diff and update accordingly
        - maybe track age and lifespan by the minute
Completed:
    - updated frame.json and code to better match display
    - display stats
    - immproved interface
    - place limits on pet creation name/type and count
        - name, type, and already exist
    - clicking outside of the menus will close it

7/28/2020
To Do:
    - place limits on pet creation name/type and count
    - clicking outside of petmenu will close it
Completed:
    - Petmenu formatting & display names

7/27/2020
To Do:
    - make petmenu display names
Completed:
    - optimized code a bit
    - disown pet basics

7/26/2020
To Do:
    
Completed:
    - data.json
    - getdata path
    - select currentpet from menu

7/25/2020
To Do:
Completed:
    - display all pets in petmenu
        - gets an array of all the objects in the files in a directory
    - optimized? some of server-side code

7/24/2020
To Do:
    - display all pets in petmenu
        - getdata filecount
Completed:
    - Set the correct image correspondent to picked pet
    - Copying frame stats to new file
    - New pets' name = qdata.name

7/23/2020
To Do:
    - Set the correct image correspondent to picked pet
Completed:
    - Get the file creation to work first

7/21/2020
To Do:
    - Get the file creation to work first
    - Set the correct image correspondent to picked pet
Completed:
    - bettered structure
    - createnew layout
    - some qdata stuff
    - selected pet during create

7/20/2020
To Do:
    - Set the correct image correspondent to picked pet
Completed:
    - Basic structure
    - Server getdata basics [frame.json]
    - Little note: ctrl + d selects word in vscode